#!/usr/bin/env python
# -*- python -*-
# vim: tabstop=8 expandtab shiftwidth=4 softtabstop=4
#
# Python script to retrieve and send to munin connected users to instance

import sys
import telnetlib
import re

# Variables
host=os.getenv("host", "127.0.0.1")
port=os.getenv("port", "8081")
plugin_version="0.1"

# Regexes
online_re = re.compile('Total of (\d{1,}) in the game')
known_re = re.compile('Total of (\d{1,}) known')

def config():
	print "graph_title 7D2D users"
	print "graph_args --base 1000 -l 0"
	print "graph_printf  %3.0lf"
	print "graph_vlabel Users"
	print "graph_category games"
	print "online.label Connected users"
	print "online.colour 00FF00"
	print "online.draw AREA"
	print "known.label Known users"
	print "known.colour 00FFFF"
	print "known.draw LINE2"
	sys.exit(0)

def report():
	# Open connection
	cnx = telnetlib.Telnet(host, port)
	cnx.read_until("end session.")

	# Online users
	cnx.write("lp\n")
	bfr=cnx.read_until("the game")
	total_online = bfr.splitlines()[-1]

	m = online_re.search(total_online)
	online_users =  m.group(1)

	# Known users
	cnx.write("lkp\n")
	bfr = cnx.read_until("known")
	total_known=bfr.splitlines()[-1]

	m = known_re.search(total_known)
	known_users = m.group(1)

	# Print results
	print "online.value", online_users
	print "known.value", known_users
	# close connection
	cnx.close()
	sys.exit(0)

def main():
	if len(sys.argv)>1:
		command = sys.argv[1]
	else:
		command = ""
	if command == "autoconf":
		autoconf()
	elif command == "suggest":
		suggest()
	elif command == "config":
		config()
	elif command == "debug":
		debug()
	else:
		report()

if __name__ == "__main__":
    main()
