#!/usr/bin/env python
# -*- python -*-
# vim: tabstop=8 expandtab shiftwidth=4 softtabstop=4
#
# Python script to retrieve and send to munin memory usage

import sys,os
import telnetlib
import re

# Variables
host=os.getenv("host", "127.0.0.1")
port=os.getenv("port", "8081")
plugin_version="0.1"

# Regexes
mem_re = re.compile('(\d+.\d+).B.*\s(\d+.\d+).B')

def config():
	print "graph_title 7D2D Memory usage"
	print "graph_args --base 1000 -l 0"
	print "graph_printf  %0.2lf"
	print "graph_order max heap"
	print "graph_vlabel MB"
	print "graph_category games"
	print "heap.label Heap mem"
	print "heap.colour 81F781"
	print "heap.draw AREA"
	print "max.label Total mem"
	print "max.colour 642EFE"
	print "max.draw AREA"
	sys.exit(0)

def report():
	# Open connection
	cnx = telnetlib.Telnet(host, port)
	cnx.read_until("end session.")

	# Online users
	cnx.write("mem\n")
	bfr=cnx.read_until("Chunks")
	memory = bfr.splitlines()[-1]

	m = mem_re.search(memory)
	heap_mem =  m.group(1)
	max_mem =  m.group(2)


	# Print results
	print "heap.value %0.2f" % float(heap_mem)
	print "max.value %0.2f" % float(max_mem)
	# close connection
	cnx.close()
	sys.exit(0)

def main():
	if len(sys.argv)>1:
		command = sys.argv[1]
	else:
		command = ""
	if command == "autoconf":
		autoconf()
	elif command == "suggest":
		suggest()
	elif command == "config":
		config()
	elif command == "debug":
		debug()
	else:
		report()

if __name__ == "__main__":
    main()
